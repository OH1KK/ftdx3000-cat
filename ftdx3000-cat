#!/bin/bash

#    ftdx300-cat Yeaesu FTDX-3000 commander
#    Copyright (C) 2018-2022  Kari Karvonen <oh1kk@toimii.fi>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

### CHANGE THESE TO MATCH YOUR SERIAL PORT AND CAT BAUD RATE
tty=/dev/serial/by-id/usb-Silicon_Labs_CP2105_Dual_USB_to_UART_Bridge_Controller_AH046H4H180061-if00-port0
tty=/dev/ttyUSB1
speed=38400
### 

function SerialWriteAndRead() {
	exec 4<$tty 5>$tty
        stty -F $tty $speed
	echo "$1" >&5
	while IFS='' read -t 1 -r line || [[ -n "$line"  ]]; do
	    REPLY="$line"
	done <&4
}

function SerialWrite() {
	exec 4<$tty 5>$tty
        stty -F $tty $speed
	echo "$1" >&5
}

if [[ $1 =~ (^[0-9]+\.?[0-9]*)|([0-9]*\.[0-9]+$) ]]; then
	TFREQ=`echo $1 | LC_ALL=C awk '{printf "%08d\n",$1*1000}'`
	SerialWrite "FA${TFREQ};"
	exit
fi

case "$1" in
	poweron)
		SerialWrite ";"
		SerialWrite "PS1;"
		;;
	poweroff)
		SerialWrite "PS0;"
		;;
	lsb)
		SerialWrite "MD01;"
		;;
	usb)
		SerialWrite "MD02;"
		;;
	cw)
		SerialWrite "MD03;"
		;;
	fm)
		SerialWrite "MD04;"
		;;
	am)
		SerialWrite "MD05;"
		;;
	fsk)
		SerialWrite "MD06;"
		;;
	cw-r)
		SerialWrite "MD07;"
		;;
	pkt-l)
		SerialWrite "MD08;"
		;;
	fsk-r)
		SerialWrite "MD09;"
		;;
	pkt-fm)
		SerialWrite "MD0A;"
		;;
	fm-n)
		SerialWrite "MD0B;"
		;;
	pkt-u)
		SerialWrite "MD0C;"
		;;
	am-n)
		SerialWrite "MD0D;"
		;;
	+[0-9]*[0-9])
		SerialWriteAndRead "FA;"
		NEWFREQ=`echo ${REPLY:2:8} ${1//+/} | LC_ALL=C awk '{printf "%08d\n",$1+$2}'`
		SerialWrite "FA${NEWFREQ};"
		;;
	-[0-9]*[0-9])
		SerialWriteAndRead "FA;"
		NEWFREQ=`echo ${REPLY:2:8} ${1//-/} | LC_ALL=C awk '{printf "%08d\n",$1-$2}'`
		SerialWrite "FA${NEWFREQ};"
		;;
	readfreq)
		SerialWriteAndRead "FA;"
		FREQ=`echo ${REPLY:2:8} | LC_ALL=C awk '{printf "%8.3f\n",$1/1000}'`
		echo "VFO A is tuned to $FREQ kHz"
		;;
	readsql)
		SerialWriteAndRead "SQ0;"
		LEVEL=`echo ${REPLY:3:3} | LC_ALL=C awk '{printf "%1.0f\n",$1/255*100}'`
		echo "Squelch level is ${LEVEL}%"
		;;
	readmode)
		SerialWriteAndRead "MD0;"
		case "${REPLY:3:1}" in
			"1")
				echo "Mode is LSB"
				;;
			"2")
				echo "Mode is USB"
				;;
			"3")
				echo "Mode is CW"
				;;
			"4")
				echo "Mode is FM"
				;;
			"5")
				echo "Mode is AM"
				;;
			"6")
				echo "Mode is FSK (RTTY-LSB)"
				;;
			"7")
				echo "Mode is CW-R"
				;;
			"8")
				echo "Mode is PKT-L"
				;;
			"9")
				echo "Mode is FSK-R (RTTY-USB)"
				;;
			"A")
				echo "Mode is PKT-FM"
				;;
			"B")
				echo "Mode is FM-N"
				;;
			"C")
				echo "Mode is PKT-U"
				;;
			"D")
				echo "Mode is AM-N"
				;;
			*) 	echo "Mode is unknown"
		esac		
		;;
	tune)
		SerialWrite "AC002;"
		;;
	readsig)
		SerialWriteAndRead "SM0;"
                LEVEL=`echo ${REPLY:3:3} | awk '{printf "%1.0f\n",$1/255*100}'`
		SREAD="S9+ >60dB *STRONG*"
		if [ $LEVEL -lt 95 ]; then SREAD="S9+60dB"; fi
		if [ $LEVEL -lt 89 ]; then SREAD="S9+50dB"; fi
		if [ $LEVEL -lt 82 ]; then SREAD="S9+40dB"; fi
		if [ $LEVEL -lt 74 ]; then SREAD="S9+30dB"; fi
		if [ $LEVEL -lt 66 ]; then SREAD="S9+20dB"; fi
		if [ $LEVEL -lt 60 ]; then SREAD="S9+10dB"; fi
		if [ $LEVEL -lt 52 ]; then SREAD="S9"; fi
		if [ $LEVEL -lt 44 ]; then SREAD="S8"; fi
		if [ $LEVEL -lt 36 ]; then SREAD="S7"; fi
		if [ $LEVEL -lt 31 ]; then SREAD="S6"; fi
		if [ $LEVEL -lt 25 ]; then SREAD="S5"; fi
		if [ $LEVEL -lt 18 ]; then SREAD="S4"; fi
		if [ $LEVEL -lt 15 ]; then SREAD="S3"; fi
		if [ $LEVEL -lt 8 ]; then SREAD="S2"; fi
		if [ $LEVEL -lt 3 ]; then SREAD="S1"; fi
		if [ $LEVEL -lt 1 ]; then SREAD="S0"; fi
		echo "Signal level is $SREAD - ${LEVEL}% of full scale"
		;;
	vol*)
		VOL=`echo ${1//vol/} | awk '{printf "%03d\n",$1/100*255}'`
		echo $VOL
		SerialWrite "AG0$VOL;"
		;;
	sql*)
		SQL=`echo ${1//sql/} | awk '{printf "%03d\n",$1/100*255}'`
		SerialWrite "SQ0$SQL;"
		;;
	*)
		echo "ftdx300-cat Yeaesu FTDX-3000 commander"
		echo ""
		echo "$0 command"
		echo ""
		echo "Where command in"
		echo "30.0 - 56000.0	Set VFO A frequency"
		echo "+hz		Tune VFO up where hz value, 100 - 10000"
		echo "-hz		Tune VFO down where hz value 100 - 10000"
		echo "vol0 - vol99	Change audio volume 0-99%"
		echo "poweron		Power on rig"
		echo "poweroff	Power off rig"
		echo "readmode	Read mode"
		echo "readsig		Read signal meter"
		echo "readfreq	Read VFO A frequency"
		echo "readsql		Read squelch value"
		echo "sql0 - sql99	Set quelch value"
		echo "lsb		Set mode"
		echo "usb		Set mode"
		echo "cw		Set mode"
		echo "fm		Set mode"
		echo "am		Set mode"
		echo "fsk		Set mode"
		echo "cw-r		Set mode"
		echo "pkt-l		Set mode"
		echo "fsk-r		Set mode"
		echo "pkt-fm		Set mode"
		echo "fm-n		Set mode"
		echo "pkt-u		Set mode"
		echo "am-n 		Set mode"
		exit 1
		;;
esac
exit 0
